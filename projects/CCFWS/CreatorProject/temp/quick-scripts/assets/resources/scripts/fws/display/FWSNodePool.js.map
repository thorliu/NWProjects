{"version":3,"sources":["FWSNodePool.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"../../../../../../../assets/resources/scripts/fws/display","sourcesContent":["/*\n * 显示对象池\n * @Author: 刘强 \n * @Date: 2018-07-31 17:35:59 \n * @Last Modified by: 刘强\n * @Last Modified time: 2018-07-31 17:59:54\n */\n\nmodule FWSNodePool\n{\n\t/** 显示对象池创建接口 */\n\texport interface FWSNodePoolCreator\n\t{\n\t\t(): cc.Node;\n\t}\n\n\t/** 显示对象池 */\n\texport class NodePool\n\t{\n\t\tprotected creator: FWSNodePoolCreator;\n\t\tprotected used: cc.Node[];\n\t\tprotected _initedCount: number;\n\t\tprotected _limitCount: number;\n\t\tprotected _pool: cc.NodePool;\n\n\t\t/**\n\t\t * 构造\n\t\t * @param creator 创建方法\n\t\t * @param initedCount 初始数量\n\t\t * @param limitCount 限制数量 (负数或者0表示不限制)\n\t\t */\n\t\tconstructor(\n\t\t\tcreator: FWSNodePoolCreator, \n\t\t\tinitedCount: number = 0, \n\t\t\tlimitCount: number = -1)\n\t\t{\n\t\t\tthis.used = [];\n\t\t\tthis._pool = new cc.NodePool();\n\n\t\t\tthis.creator = creator;\n\t\t\tthis._initedCount = initedCount;\n\t\t\tthis._limitCount = limitCount;\n\n\t\t\tthis.createHandler();\n\t\t}\n\n\t\t/** 清除方法 */\n\t\tprotected clearHandler(): void\n\t\t{\n\t\t\tthis.putAllHandler();\n\t\t\tthis._pool.clear();\n\t\t}\n\n\t\t/** 创建方法 */\n\t\tprotected createHandler(): void\n\t\t{\n\t\t\tif (!this.creator) return;\n\t\t\tfor (var i: number = 0; i < this._initedCount; i++)\n\t\t\t{\n\t\t\t\tvar node: cc.Node = this.creator();\n\t\t\t\tif (node)\n\t\t\t\t{\n\t\t\t\t\tthis._pool.put(node);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/** 获取方法 */\n\t\tprotected getHandler(): cc.Node\n\t\t{\n\t\t\tvar ret: cc.Node = null;\n\t\t\tif (this._pool.size() > 0)\n\t\t\t{\n\t\t\t\tret = this._pool.get();\n\t\t\t\tif (!ret.isValid) ret = null;\n\t\t\t}\n\n\t\t\tif (!ret && this._limitCount <= 0 && this.creator)\n\t\t\t{\n\t\t\t\tret = this.creator();\n\t\t\t}\n\n\t\t\tif (ret)\n\t\t\t{\n\t\t\t\tthis.used.push(ret);\n\t\t\t}\n\n\t\t\treturn ret;\n\t\t}\n\n\t\t/** 放入方法 */\n\t\tprotected putHandler(node: cc.Node): void\n\t\t{\n\t\t\tif (!node) return;\n\n\t\t\tvar i: number = this.used.indexOf(node);\n\t\t\tif (i >= 0) this.used.splice(i, 1);\n\n\t\t\tif (!node.isValid) return;\n\t\t\tthis._pool.put(node);\n\t\t}\n\n\t\t/** 收回所有内容 */\n\t\tprotected putAllHandler(): void\n\t\t{\n\t\t\tfor (var i: number = 0; i < this.used.length; i++)\n\t\t\t{\n\t\t\t\tvar node: cc.Node = this.used[i];\n\t\t\t\tif (!node.isValid) continue;\n\t\t\t\tthis._pool.put(node);\n\t\t\t}\n\t\t\tthis.used.splice(0, this.used.length);\n\t\t}\n\n\t\t/** 获取限制数量 */\n\t\tpublic get limitCount(): number\n\t\t{\n\t\t\treturn this._limitCount;\n\t\t}\n\n\t\t/** 获取初始数量 */\n\t\tpublic get initedCount(): number\n\t\t{\n\t\t\treturn this._initedCount;\n\t\t}\n\n\t\t/** 获了已经使用的数量 */\n\t\tpublic get usedCount(): number\n\t\t{\n\t\t\treturn this.used.length;\n\t\t}\n\n\t\t/** 获取未使用的数量 */\n\t\tpublic get freedCount(): number\n\t\t{\n\t\t\treturn this._pool.size();\n\t\t}\n\n\t\t/** 拿出对象 */\n\t\tpublic getNode(): cc.Node\n\t\t{\n\t\t\treturn this.getHandler();\n\t\t}\n\n\t\t/** 收回指定对象 */\n\t\tpublic putNode(node: cc.Node): void\n\t\t{\n\t\t\tthis.putHandler(node);\n\t\t}\n\n\t\t/** 收回所有对象 */\n\t\tpublic putAllNodes(): void\n\t\t{\n\t\t\tthis.putAllHandler();\n\t\t}\n\n\t\t/** 重置对象池 */\n\t\tpublic reset(): void\n\t\t{\n\t\t\tthis.clearHandler();\n\t\t\tthis.createHandler();\n\t\t}\n\t}\n}\n\nexport = FWSNodePool;\n\n\n"]}