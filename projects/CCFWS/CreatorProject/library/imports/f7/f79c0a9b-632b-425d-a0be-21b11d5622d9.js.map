{"version":3,"sources":["../../../../../../../assets/resources/scripts/fws/utils/assets/resources/scripts/fws/utils/X.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"../../../../../../../assets/resources/scripts/fws/utils","sourcesContent":["/*\n * 调试功能\n * @Author: 刘强 \n * @Date: 2018-07-31 15:40:50 \n * @Last Modified by: 刘强\n * @Last Modified time: 2018-08-01 11:07:49\n */\n\nimport FWSEnv = require('../FWSEnv');\n\n\nmodule X\n{\n\t/** 控制台颜色值 */\n\texport type ConsoleColor = \"red\" | \"green\" | \"blue\" | \"orange\" | \"violet\";\n\n\t/** 获取任意内容的文本信息 */\n\tfunction getString(args: any[]): string\n\t{\n\t\tvar ret: string = \"\";\n\t\tvar ary: string[] = [];\n\t\tif (args !== null && args !== undefined)\n\t\t{\n\t\t\tfor (var i: number = 0; i < args.length; i++)\n\t\t\t{\n\t\t\t\tvar a: any = args[i];\n\t\t\t\tif (a === null) ary.push(\"NULL\");\n\t\t\t\telse if (a === undefined) ary.push(\"UNDEFINED\");\n\t\t\t\telse ary.push(a.toString());\n\t\t\t}\n\t\t}\n\t\tret = ary.join(\" \");\n\t\treturn ret;\n\t}\n\n\t/** 执行控制台指令 */\n\tfunction executeConsole(api: string, args: any[]): void\n\t{\n\t\tvar handler: Function = console[api];\n\t\tif (!handler) return;\n\n\t\tif (FWSEnv.DEBUG_ADVANCED)\n\t\t{\n\t\t\thandler.apply(null, args);\n\t\t}\n\t\telse\n\t\t{\n\t\t\thandler.call(null, getString(args));\n\t\t}\n\t}\n\n\t/**\n\t * 输出普通日志\n\t * @param args 内容\n\t */\n\texport function log(...args: any[]): void\n\t{\n\t\tif (!FWSEnv.DEBUG) return;\n\n\t\texecuteConsole(\"log\", args);\n\t}\n\n\t/**\n\t * 输出信息日志\n\t * @param args 内容\n\t */\n\texport function info(...args: any[]): void\n\t{\n\t\tif (!FWSEnv.DEBUG) return;\n\n\t\texecuteConsole(\"info\", args);\n\t}\n\n\t/**\n\t * 输出警告日志\n\t * @param args 内容\n\t */\n\texport function warn(...args: any[]): void\n\t{\n\t\tif (!FWSEnv.DEBUG) return;\n\n\t\texecuteConsole(\"warn\", args);\n\t}\n\n\t/**\n\t * 输出借误日志\n\t * @param args 内容\n\t */\n\texport function error(...args: any[]): void\n\t{\n\t\tif (!FWSEnv.DEBUG) return;\n\n\t\texecuteConsole(\"error\", args);\n\t}\n\n\t/**\n\t * 按照指定的颜色输出日志\n\t * @param color {ConsoleColor} 按照\n\t * @param args 任意内容\n\t */\n\texport function color(color: ConsoleColor, ...args: any[]): void\n\t{\n\t\tif (!FWSEnv.DEBUG_ADVANCED) return;\n\n\t\tvar msg: string = getString(args);\n\t\tconsole.log(\"%c\" + msg, \"color:\" + color);\n\t}\n\n\t/** 开始一段可展开和收起的日志项(展开状态) */\n\texport function group(...args: any[]): void\n\t{\n\t\tif (!FWSEnv.DEBUG_ADVANCED) return;\n\n\t\tconsole.group.apply(null, args);\n\n\t}\n\n\t/** 开始一段可展开和收起的日志项(收起状态) */\n\texport function groupCollapsed(...args: any[]): void\n\t{\n\t\tif (!FWSEnv.DEBUG_ADVANCED) return;\n\t\tconsole.groupCollapsed.apply(null, args);\n\t}\n\n\t/** 结束一段可展开和收起的日志项 */\n\texport function groupEnd(): void\n\t{\n\t\tif (!FWSEnv.DEBUG_ADVANCED) return;\n\n\t\tconsole.groupEnd();\n\t}\n\n\t/** 表格形式输出数据 */\n\texport function table(...args: any[]): void\n\t{\n\t\tif (!FWSEnv.DEBUG_ADVANCED) return;\n\n\t\tconsole.table.apply(null, args);\n\t}\n\n\t/** 计时开始 */\n\texport function time(...args: any[]): void\n\t{\n\t\tif (!FWSEnv.DEBUG_ADVANCED) return;\n\n\t\tconsole.time();\n\t}\n\n\t/** 计时结束 */\n\texport function timeEnd(...args: any[]): void\n\t{\n\t\tif (!FWSEnv.DEBUG_ADVANCED) return;\n\n\t\tconsole.timeEnd();\n\t}\n\n\t/** 输出堆栈调用 */\n\texport function trace(...args: any[]): void\n\t{\n\t\tif (!FWSEnv.DEBUG_ADVANCED) return;\n\n\t\tconsole.trace.apply(null, args);\n\t}\n\n\t/** 输出节点树形结构 */\n\texport function treeNodes(target?: cc.Node, collapsed: boolean = true): void\n\t{\n\t\tif (!FWSEnv.DEBUG_ADVANCED) return;\n\n\t\tif (!target) target = cc.director.getScene();\n\t\tif (!target) return;\n\n\t\t//收起状态\n\t\tgroupCollapsed(target);\n\n\t\tfor (var i: number = 0; i < target.childrenCount; i++)\n\t\t{\n\t\t\tvar child: cc.Node = target.children[i];\n\n\t\t\ttreeNodes(child);\n\t\t}\n\n\t\tgroupEnd();\n\t}\n}\nexport = X;\n\nwindow[\"X\"] = X;"]}